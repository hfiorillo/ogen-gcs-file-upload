// Code generated by ogen, DO NOT EDIT.

package fileupload

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// UploadFile implements uploadFile operation.
	//
	// Uploads a spreadsheet file to GCS bucket with the following constraints:
	// - Maximum file size: 10MB
	// - Allowed content types:
	// - CSV (text/csv, application/csv)
	// - XLSX (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet).
	//
	// POST /upload
	UploadFile(ctx context.Context, req *UploadFileReq) (UploadFileRes, error)
	// NewError creates *ErrorStatusCodeWithHeaders from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCodeWithHeaders
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
